{% set version = '3.0.2' %}
{% set build_number = '0' %}
{% set component = component or 'intervalxt' %}
{% set action = action or 'release' %}
{% set py = _python | replace('*', '') | replace(' ', '') | replace('.', '') %}
{% set pyintervalxt_requirements = component in ["intervalxt", "pyintervalxt"] %}
{% set libintervalxt_requirements = component in ["intervalxt", "libintervalxt"] %}
{% set test_requirements = action in ["test", "coverage", "benchmark"] %}

package:
  name: {{ component }}
  version: {{ version }}

source:
  git_url: {{ environ.get('FEEDSTOCK_ROOT', '..') }}

build:
  number: {{ build_number }}
{%- if component == "pyintervalxt" %}
  string: py{{ py }}_{{ build_number }}
{%- else %}
  string: {{ build_number }}
{%- endif %}
  # e-antic is not available on Windows yet
  skip: True  # [win]
  # e-antic is not available on macOS yet
  skip: True  # [osx]
{%- if component == "libintervalxt" %}
  run_exports:
    - {{ pin_subpackage(component, max_pin="x") }}
{%- endif %}
  script_env:
{%- if action == "coverage" %}
    - BUILD_BUILDID
    - BUILD_BUILDNUMBER
    - BUILD_SOURCEBRANCHNAME
    - BUILD_SOURCEVERSION
    - SYSTEM_PULLREQUEST_PULLREQUESTID
    - SYSTEM_PULLREQUEST_PULLREQUESTNUMBER
    - SYSTEM_TEAMFOUNDATIONSERVERURI
    - SYSTEM_TEAMPROJECT
{%- endif %}
{%- if action == "benchmark" %}
    - ASV_SECRET_KEY
{%- endif %}

requirements:
  build:
    - libtool
    - automake
    - coreutils
    - {{ compiler('cxx') }}
{%- if action == "benchmark" %}
    - git
{%- elif action == "style" %}
    - clangdev ==10.0.1
{%- endif %}
  host:
{%- if libintervalxt_requirements %}
    - boost-cpp
    - fmt >=7.1.1
    - gmp
    - ppl
{%- endif %}
{%- if pyintervalxt_requirements %}
    - python {{ _python }}
    - setuptools
    - cppyythonizations
    - gmpxxyy
    - pyeantic >=1.1.1
    - pyexactreal >=1.3.1
{%- endif %}
{%- if component == "pyintervalxt" %}
    - libintervalxt {{ version }} {{ build_number }}
{%- endif %}
{%- if test_requirements %}
    # enable test/pyintervalxt tests in ./configure
    - pytest
    - cppyy
    # sample::Lengths needs gmpxxll.hpp
    - gmpxxll
    # we test a sample::Coefficients provider for exact-real
    - libexactreal
    # we test a sample::Coefficients provider for e-antic
    - e-antic >=1.0.0rc8
    # enable check-valgrind in ./configure
    - valgrind >=3.15.0
    # to run benchmarks
    - benchmark
    - asv
{%- endif %}
  run:
{%- if component == "pyintervalxt" %}
    - python {{ _python }}
    - cppyy
{%- endif %}

{%- if component == "libintervalxt" %}
test:
  commands:
    - test -f ${PREFIX}/lib/libintervalxt.so
{%- endif %}
{%- if component == "pyintervalxt" %}
test:
  imports:
    - {{ component }}
{%- endif %}

about:
  home: https://github.com/flatsurf/intervalxt
  license: GPL-3.0-or-later
  license_file: COPYING
  summary: Boshernitzan Algorithm with Interval Exchange Transformations

extra:
  recipe-maintainers:
    - saraedum
  variables:
    action: {{ action }}
    job: {{ job }}
    component: {{ component }}
